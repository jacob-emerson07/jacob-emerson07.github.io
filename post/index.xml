<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Projects on Jacob Emerson</title>
    <link>/post/</link>
    <description>Recent content in Projects on Jacob Emerson</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 02 Mar 2017 12:00:00 -0500</lastBuildDate>
    
	<atom:link href="/post/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Caption Bot for Discord</title>
      <link>/post/project-3/</link>
      <pubDate>Sun, 02 Aug 2020 10:58:12 +0000</pubDate>
      
      <guid>/post/project-3/</guid>
      <description>Bot that takes images posted in a chat room and sends a message with a generated caption for that photo. Utilizes the Discord API to extract the image and uses a pre-trained CNN to RNN to make the caption. Usually takes around 7-10 seconds to send a generated caption once an image appears.  Read More About The Project on GitHub</description>
    </item>
    
    <item>
      <title>League of Legends: Surrender at 10?</title>
      <link>/post/project-1/</link>
      <pubDate>Fri, 17 Jul 2020 10:58:12 +0000</pubDate>
      
      <guid>/post/project-1/</guid>
      <description>Trained a model that predicts (with 73% accuracy) the result of a League of Legends game based on the 10-minute stats to see if it&amp;rsquo;s possible for users to upload their game data and find their chances of winning. Used dataset comprised of ~10k games, filtered to only have stats that players can find while in the game. Compared between Logistic Regression, SVC, Linear SVC and Random Forest Classifier to find the best model.</description>
    </item>
    
    <item>
      <title>Driving While Drowsy Detector</title>
      <link>/post/project-2/</link>
      <pubDate>Thu, 16 Jul 2020 10:58:12 +0000</pubDate>
      
      <guid>/post/project-2/</guid>
      <description>System that tracks how well a user stays focused while driving and logs the data into a database. Uses OpenCV along with my own CNN to locate each eye and determine if open or closed. Database supports usernames and passwords so that users can see their overall stats over time.  Read More About The Project on GitHub</description>
    </item>
    
  </channel>
</rss>